
	/*
	
	// initialize ship locations
	int x_array[fleetsize - 1];
	int y_array[fleetsize - 1];
		
	// initialize first ship values
	//x_array[0] = rand() % (boardsize); // 0-3
	//y_array[0] = rand() % (boardsize); // 0-3
	//cout<<x_array[0]<<"\n";
	//cout<<y_array[0]<<"\n";	
	
	// set board
	bool location[boardsize-1][boardsize-1];
	// initialize board to zero
	for(int i = 0; i < boardsize; i++){
		for(int j = 0; j < boardsize; j++){
			location[i][j] = 0;
		}
	}
	
	// initialize the first value of location array
	//location[x_array[0]][y_array[0]] = 1;
	
	// set position/
	int end = 0;
	while(end <= fleetsize){
		x_array[end] = rand() % boardsize;
		y_array[end] = rand() % boardsize;
		
		if(location[(int)x_array[end]][(int)y_array[end]] == 0){
			location[(int)x_array[end]][(int)y_array[end]] = 1;
			cout<<"ahahahahahah\n";
			end++;
		}
		
		cout<< x_array[end] << "\n";
		cout<< y_array[end] << "\n";
		
		cout<< location[0][0] << "	" << location[0][1] << "	" << location[0][2] << "\n";
		cout<< location[1][0] << "	" << location[1][1] << "	" << location[1][2] << "\n";
		cout<< location[2][0] << "	" << location[2][1] << "	" << location[2][2] << "\n";
		
		cin.get();
		
	}
	*/
/*
	
	for(int i = 0; i < fleetsize; i++){
		x_array[i] = (int) (rand() % boardsize); // 0-2
		y_array[i] = (int) (rand() % boardsize); // 0-2
		
		
		
		// check for stacking
		if(location[x_array[i]][y_array[i]] == 0){
			location[x_array[i]][y_array[i]] = 1;
		}else if(location[x_array[i]][(int) y_array[i]] == 1){
			bool check = 1;
			while(check){
				x_array[i] = rand() % boardsize;
				y_array[i] = rand() % boardsize;
					
				if(location[(int) x_array[i]][(int) y_array[i]] == 0){
					location[(int) x_array[i]][(int) y_array[i]] = 1;
					check = 0;
				}
				cout<< "when this runs\n";
			}
		}
		
		cout<<" xarray "<< x_array[i] << "\n";
		cout<<" yarray "<< y_array[i] << "\n";
		
		cout<< location[0][0] << "	" << location[0][1] << "	" << location[0][2] << "\n";
		cout<< location[1][0] << "	" << location[1][1] << "	" << location[1][2] << "\n";
		cout<< location[2][0] << "	" << location[2][1] << "	" << location[2][2] << "\n";
		
		cin.get();
	}
	*/
	//cout<< "errors are " << error << " \n";
	
	//cout<< location[0][0] << "	" << location[0][1] << "	" << location[0][2] << "\n";
	//cout<< location[1][0] << "	" << location[1][1] << "	" << location[1][2] << "\n";
	//cout<< location[2][0] << "	" << location[2][1] << "	" << location[2][2] << "\n";
	
	/*
	cout<<"\n";
	
	for (int i = 0; i < fleetsize; i++){
		cout<<"\n"<<x_array[i]<<"\n";
		cout<<y_array[i]<<"\n";	
	}
	*/
	
	
	
// set location
void setlocation(int boardsize, int fleetsize, int x_array[], int y_array[]){
	//seed();
	
	//int new_x;
	//int new_y;
	
	// initialize first ship values
	x_array[0] = rand() % (boardsize); // 0-3
	y_array[0] = rand() % (boardsize); // 0-3
	//cout<<x_array[0]<<"\n";
	//cout<<y_array[0]<<"\n";	
	
	// set board
	bool location[boardsize-1][boardsize-1];
	// initialize board to zero
	for(int i = 0; i < boardsize; i++){
		for(int j = 0; j < boardsize; j++){
			location[i][j] = 0;
		}
	}
	
	// initialize the first value of location array
	//location[x_array[0]][y_array[0]] = 1;
	
	// set positions
	int end = 0;
	while(end <= fleetsize){
		x_array[end] = rand() % boardsize;
		y_array[end] = rand() % boardsize;
		
		if(location[(int)x_array[end]][(int)y_array[end]] == 0){
			location[(int)x_array[end]][(int)y_array[end]] = 1;
			cout<<"ahahahahahah\n";
			end++;
		}
		
		cout<< x_array[end] << "\n";
		cout<< y_array[end] << "\n";
		
		cout<< location[0][0] << "	" << location[0][1] << "	" << location[0][2] << "\n";
		cout<< location[1][0] << "	" << location[1][1] << "	" << location[1][2] << "\n";
		cout<< location[2][0] << "	" << location[2][1] << "	" << location[2][2] << "\n";
		
		cin.get();
		
	}

	
	/*
	
	for(int i = 0; i < fleetsize; i++){
		x_array[i] = rand() % boardsize; // 0-2
		y_array[i] = rand() % boardsize;// 0-2
		
		// check for stacking
		if(location[x_array[i]][y_array[i]] == 0){
			location[x_array[i]][y_array[i]] = 1;
		}else{
			bool check = 1;
			while(check){
				x_array[i] = rand() % boardsize;
				y_array[i] = rand() % boardsize;
				
				//cout<<"new_x "<< new_x << "\n";
				//cout<<"new_y "<< new_y << "\n";					
				//cin.get();
					
				if(location[x_array[i]][y_array[i]] == 0){
					location[x_array[i]][y_array[i]] = 1;
					check = 0;
				}
				cout<< "when this runs\n";
			}
		}
		cout<< location[0][0] << "	" << location[0][1] << "	" << location[0][2] << "\n";
		cout<< location[1][0] << "	" << location[1][1] << "	" << location[1][2] << "\n";
		cout<< location[2][0] << "	" << location[2][1] << "	" << location[2][2] << "\n";	
		
		cout<<" xarray "<< x_array[i] << "\n";
		cout<<" yarray "<< y_array[i] << "\n";
		
		cin.get();
	}
	
	//cout<< "errors are " << error << " \n";
	
	//cout<< location[0][0] << "	" << location[0][1] << "	" << location[0][2] << "\n";
	//cout<< location[1][0] << "	" << location[1][1] << "	" << location[1][2] << "\n";
	//cout<< location[2][0] << "	" << location[2][1] << "	" << location[2][2] << "\n";
*/
}

